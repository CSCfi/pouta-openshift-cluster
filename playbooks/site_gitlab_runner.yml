---
# Provision gitlab runner
# Gitlab runner needs firewall opening to gitlab server
- hosts: localhost
  gather_facts: no
  connection: local
  roles:
    - poc_facts
  tasks:
    - name: Add public key to OpenStack for {{ cluster_name }}-gitlab-runner
      os_keypair:
        state: present
        name: "{{ cluster_name }}-gitlab-runner"
        public_key_file: "/dev/shm/{{ cluster_name }}/id_rsa.pub"

    - name: check if stack has been provisioned already
      shell: openstack stack show {{ cluster_name }}-gitlab-runner
      register: stack_output
      failed_when: false
      changed_when: false

    - when:
        - stack_output.stderr.find('Stack not found') != -1 or force_heat_stack_update | d() | bool
      block:
        - name: Build gitlab runner stack
          register: heat_stack
          os_stack:
            name: "{{ cluster_name }}-gitlab-runner"
            state: present
            template: "files/heat/gitlab-runner/gitlab-runner-heat-stack.yml"
            wait: yes
            parameters:
              env_name: "{{ cluster_name }}-gitlab-runner"
              ssh_allow_cidrs: "{{ runner_ssh_allow_cidrs }}"
              network_cidr: "{{ runner_network_cidr }}"
              network_dns_servers: "{{ openshift_external_dns_server }}"
              network_router: "{{ openshift_router }}"
              key_name: "{{ cluster_name }}-gitlab-runner"
              vm_image: "{{ runner_vm_image }}"
              vm_flavor: "{{ runner_vm_flavor }}"
              vm_ip: "{{ runner_vm_ip }}"

        - name: Associate fixed floating IP with server node
          os_floating_ip:
            server: "{{ cluster_name }}-gitlab-runner"
            floating_ip_address: "{{ runner_public_ip }}"

        # Configure ssh login
        - name: Set facts
          set_fact: ssh_config_file={{ lookup('env', 'HOME') }}/.ssh/config
        - name: create $HOME/.ssh/
          file:
            dest: "{{lookup('env', 'HOME')}}/.ssh/"
            state: directory

        - name: add ssh config entry for runner
          blockinfile:
            create: yes
            mode: '0600'
            dest: "{{ ssh_config_file }}"
            block: |
              Host {{ cluster_name }} {{ runner_public_ip }}
                HostName {{ runner_public_ip }}
                User cloud-user
                ForwardAgent no
                GSSAPIAuthentication no
                StrictHostKeyChecking no
                UserKnownHostsFile /dev/null
                IdentityFile /dev/shm/{{ cluster_name }}/id_rsa
            marker: "# {mark} ANSIBLE MANAGED BLOCK {{ cluster_name }}"

- hosts: localhost
  gather_facts: no
  connection: local
  tasks:
    - name: Wait for SSH to work
      shell: >
        ssh {{ runner_public_ip }}
        'echo success'
      register: result
      until: result.stdout.find('success') != -1
      retries: 30
      delay: 5
      changed_when: false

# Host is up, install docker and gitlab-runner
- hosts: runner
  become: yes
  roles:
    - poc_facts
    - gitlab_runner
