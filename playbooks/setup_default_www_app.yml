---
- name: Setup default www app
  hosts: masters[0]
  tasks:
    # block for conditionally deploying default-www-app
    - block:
      - name: create project default-www
        oc_project:
          state: present
          name: default-www
          display_name: "The default OpenShift web application"

      - name: check if app has been deployed
        command: oc get dc -n default-www default-www-app
        register: existing_default_www_app
        changed_when: false
        failed_when: false

      - name: create app
        shell: >
          oc new-app -n default-www
          --name default-www-app
          {{ default_www_app_repo }}\#{{ default_www_app_source_ref|default('master') }}
        when: existing_default_www_app.stdout_lines | length == 0

      - name: scale to 2 pods, add a livenessProbe and a readinessProbe
        oc_edit:
          name: default-www-app
          namespace: default-www
          kind: deploymentconfig
          content:
            spec.replicas: 2
            spec.template.spec.containers[0].livenessProbe.tcpSocket.port: 8000
            spec.template.spec.containers[0].readinessProbe.httpGet.path: /
            spec.template.spec.containers[0].readinessProbe.httpGet.port: 8000

      - name: update buildconfig
        oc_edit:
          name: default-www-app
          namespace: default-www
          kind: buildconfig
          content:
            spec.source.git.ref: "{{ default_www_app_source_ref|default('master') }}"
            spec.strategy.dockerStrategy.from.kind: "{{ default_www_app_base_image_type|default('DockerImage') }}"
            spec.strategy.dockerStrategy.from.name: "{{ default_www_app_base_image|default('centos:7') }}"

      # TODO: use oc_env when that works  for buildconfigs (at the time of this writing it does not)
      - name: set environment variables for the buildconfig
        command: oc set env -n default-www bc/default-www-app {{ item.key }}="{{ item.value }}"
        with_dict: "{{ default_www_app_environment }}"

      - name: build latest version
        command: oc start-build -n default-www default-www-app

      - name: create default www app routes
        oc_route:
          state: present
          name: "default-www-{{ item.name }}"
          namespace: default-www
          service_name: default-www-app
          cert_path: "/etc/origin/master/named_certificates/{{ openshift_public_hostname }}.crt"
          key_path: "/etc/origin/master/named_certificates/{{ openshift_public_hostname }}.key"
          cacert_path: "/etc/origin/master/named_certificates/{{ openshift_public_hostname }}_ext_ca.crt"
          host: "{{ item.hostname|default(item.name + '.' + openshift_public_hostname) }}"
          tls_termination: edge
        with_items:
        - name: default
          hostname: "{{ openshift_public_hostname }}"
        - name: www
        - name: admin
        - name: app-domain
          hostname: "{{ openshift_app_domainÂ | default('') }}"
          create: "{{ openshift_app_domain is defined }}"
        when: item.create | default(True) | bool

      - name: add redirect rule to default www app routes
        oc_edit:
          kind: routes
          name: "default-www-{{ item.name }}"
          namespace: default-www
          content:
            spec.tls.insecureEdgeTerminationPolicy: Redirect
        with_items:
        - name: default
        - name: www
        - name: admin
        - name: app-domain
          create: "{{ openshift_app_domain is defined }}"
        when: item.create | default(True) | bool

      - name: wait for app to start responding
        uri:
          url: https://{{ openshift_public_hostname }}
          method: GET
        register: app_response
        until: ('status' in app_response) and (app_response.status == 200)
        retries: 120

      when:
      - deploy_default_www_app | default(false) | bool
