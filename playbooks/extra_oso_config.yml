---
- name: Import objects through first master
  hosts: masters[0]
  roles:
    - role: poc_facts
  tasks:
    - name: update storage classes
      oc_storageclass:
        name: "{{ item.name }}"
        state: present
        default_storage_class: "{{ item.default_storage_class|default(omit) }}"
        provisioner: "{{ item.provisioner }}"
        parameters: "{{ item.parameters|default([]) }}"
      with_items: "{{ storage_classes|default([]) }}"
      when:
        - skip_pvc|default(false) == false
        - item.name in active_storage_classes

    - name: copy nfs_pv definitions to first master
      copy:
        src: /tmp/nfs_pv
        dest: /home/cloud-user/
      when: provision_nfs_pvs|default(false)|bool

    - name: create PVs
      shell: for vol in nfs_pv/persistent-volume.pvol*; do oc create -f $vol; done
      failed_when: false
      when: provision_nfs_pvs|default(false)|bool

    - name: copy default project template to first master
      template:
        src: "{{ oso_default_project_request|default('templates/project-request.yaml') }}"
        dest: /home/cloud-user/project-request.yaml

    - name: check if project template exists
      shell: oc get template -n default project-request-default
      register: existing_template
      changed_when: false
      failed_when: false

    - name: import project template
      shell: oc create -n default -f /home/cloud-user/project-request.yaml
      when: existing_template.stdout_lines | length == 0

    - name: update project template
      shell: oc replace -n default -f /home/cloud-user/project-request.yaml
      when: existing_template.stdout_lines | length > 0

    - name: replace default route for Heketi with a more secure one (TLS+whitelist)
      include: tasks/upsert_k8s_object.yml
      vars:
        namespace: glusterfs
        template_base_name: heketi-storage-route.yaml.j2
        name: heketi-storage
        upsert_replace: true

    - name: image, nodeSelector and memory limit changes to heketi-storage
      oc_edit:
        namespace: glusterfs
        kind: dc
        name: heketi-storage
        content:
          spec.template.spec.nodeSelector.type: "{{ poc_heketi_node_selector_type|default('master') }}"
          spec.template.spec.containers[0].resources.limits.memory: "{{ poc_heketi_memory_limit|default('1Gi') }}"
          spec.template.spec.containers[0].resources.requests.memory: "{{ poc_heketi_memory_request|default('1Gi') }}"
          spec.template.spec.containers[0].image: "{{ poc_heketi_image|default('heketi/heketi:6') }}"
          spec.template.spec.containers[0].imagePullPolicy: Always

    - name: Deploy glusterblock-storage-provisioner-dc on master nodes by adding a node selector
      oc_edit:
        namespace: glusterfs
        kind: deploymentconfig
        name: glusterblock-storage-provisioner-dc
        content:
          spec.template.spec.nodeSelector.type: master
