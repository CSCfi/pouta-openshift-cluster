---
- block:
  - name: create temp directory for templating ({{ name }})
    tempfile:
      state: directory
    register: upsert_mktemp
    changed_when: False

  - set_fact:
      l_object_yaml_path: "{{ upsert_mktemp.stdout }}/{{ (template_base_name | splitext)[0] }}"

  - name: instantiate template to object definition ({{ name }})
    template:
      src: "{{ template_sub_dir|default('') }}{{ template_base_name }}"
      dest: "{{ l_object_yaml_path }}"
    changed_when: no

  - name: check if object has been created already ({{ name }})
    shell: oc get -n {{ namespace }} -f {{ l_object_yaml_path }}
    register: upsert_existing_object
    changed_when: false
    failed_when: false

  - name: create object ({{ name }})
    shell: oc create -n {{ namespace }} -f {{ l_object_yaml_path }}
    when: upsert_existing_object.stdout_lines | length == 0

  - name: replace object ({{ name }})
    shell: oc replace -n {{ namespace }} -f {{ l_object_yaml_path }}
    when:
    - upsert_existing_object.stdout_lines | length > 0
    - upsert_replace|default(true)|bool
    failed_when: false

  always:
  - name: delete temp directory
    file:
      path: "{{ upsert_mktemp.stdout }}"
      state: absent
    changed_when: False
    check_mode: no
