---
- import_playbook: get_install_state.yml

- name: Store inventory value of service broker feature flags
  hosts: all
  tasks:
    - name: Store inventory value of service broker feature flags
      set_fact:
        inv_ansible_service_broker_install: "{{ ansible_service_broker_install }}"
        inv_template_service_broker_install: "{{ template_service_broker_install }}"

# We will enable these if they are enabled in the inventory once we have a
# usable dynamic storage class configured in post-install. Installing these
# will fail if no storage is available.
- name: Disable installation of service brokers during main openshift-ansible install
  hosts: all
  tasks:
    - name: set service broker installation facts
      set_fact:
        ansible_service_broker_install: False
        template_service_broker_install: False

# The k8s Ansible module needs python2-openshift to work. When python2-openshift
# is installed using the mitogen_linear strategy, its presence does not get
# picked up in the same run by k8s for some reason. As a workaround, install it
# here separately using the regular linear strategy.
# For more context, see:
# https://github.com/dw/mitogen/issues/569#issuecomment-493386838
- name: k8s module + mitogen workaround - install python2-openshift
  strategy: linear
  hosts:
    - masters
  tasks:
    - name: install python2-openshift
      retries: 3
      delay: 20
      register: yumresult
      until: yumresult.failed is false
      yum:
        pkg: "python2-openshift"
        state: present

- name: Configure cluster common parts
  hosts:
    - masters
    - nodes
    - etcd
    - lb
    - nfsservers
  become: yes
  roles:
    - base
    - cluster_common

- name: Install NRPE for monitoring
  hosts: all:!bastion
  become: yes
  roles:
    - ansible-role-nrpe
    - ansible-role-nrpe-plugins

- name: Configure sudo for nrpe
  hosts: all
  become: yes
  roles:
    - ansible-role-sudo

- name: Allow nrpe to run sudo in selinux
  hosts: all
  become: yes
  tasks:
    - name: selinux nagios_run_sudo flag
      seboolean:
        name: nagios_run_sudo
        state: true
        persistent: true


- name: Configure keepalived on LB nodes (multimaster installations)
  vars:
    - keepalived_state: "{{ 'MASTER' if inventory_hostname.find('lb-1') != -1 else 'BACKUP' }}"
    - keepalived_priority: "{{ 90 if inventory_hostname.find('lb-1') != -1 else 60 }}"
    - keepalived_app_routes_down_weight: "-40"
    - keepalived_vip: "{{ lb_vip_ip }}"
    - keepalived_password: "{{ ( cluster_name | password_hash('sha256', common_salt )).split('$')[3]|truncate(8, True, '') }}"
  hosts:
    - lb
  roles:
    - keepalived

- name: Configure openshift VMs
  hosts:
    - masters
    - nodes
    - lb
    - etcd
  become: yes
  roles:
    - role: lvm_storage

    - role: docker_host
      docker_lvol_vg_name: "{{ 'vg_data' if docker_storage_driver == 'devicemapper' else '' }}"
      docker_lvol_size: "{{ '99%FREE' if docker_storage_driver == 'devicemapper' else '' }}"
      docker_package_state: "noop"

- name: Configure openshift masters
  hosts:
    - masters
  become: yes
  roles:
    - openshift_master

- name: Configure external glusterfs VMs
  hosts:
    - glusterfs
  become: yes
  roles:
    - role: external_glusterfs_node
      when:
      - not openshift_storage_glusterfs_is_native|default(true)

- name: Configure openshift nodes
  hosts:
    - nodes
  become: yes
  roles:
    - openshift_node

- name: Prepare nfs server for OpenShift NFS playbook
  hosts:
    - nfsservers
  become: yes
  roles:
    - lvm_storage
    - nfs_server
