---
heat_template_version: newton

description: >
  VM with at least two and possibly more volumes attached.

parameters:
  vm_name:
    type: string
  image:
    type: string
  networks:
    type: json
  flavor:
    type: string
  metadata:
    type: json
  key_name:
    type: string
  security_groups:
    type: json
  scheduler_hints:
    type: json
  vol_name_suffix_1:
    type: string
  vol_size_1:
    type: string
  vol_name_suffix_2:
    type: string
  vol_size_2:
    type: string
  extension_volume_group_size:
    type: number
    default: 0
  extension_volume_size:
    type: number
    default: 0
  volume_deletion_policy:
    type: string
    default: "Retain"

resources:
  vm:
    type: OS::Nova::Server
    properties:
      name: { get_param: vm_name }
      image: { get_param: image }
      networks: { get_param: networks }
      flavor: { get_param: flavor }
      metadata: { get_param: metadata }
      key_name: { get_param: key_name }
      security_groups: { get_param: security_groups }
      scheduler_hints: { get_param: scheduler_hints }

  volume_1:
    type: OS::Cinder::Volume
    depends_on: vm
    properties:
      name:
        list_join: ['-', [{ get_param: vm_name }, { get_param: vol_name_suffix_1 }]]
      size: { get_param: vol_size_1 }
    deletion_policy: { get_param: volume_deletion_policy }

  volume_attachment_1:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: vm }
      volume_id: { get_resource: volume_1 }
      mountpoint: /dev/vdb

  volume_2:
    type: OS::Cinder::Volume
    depends_on: volume_attachment_1
    properties:
      name:
        list_join: ['-', [{ get_param: vm_name }, { get_param: vol_name_suffix_2 }]]
      size: { get_param: vol_size_2 }
    deletion_policy: { get_param: volume_deletion_policy }

  volume_attachment_2:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: vm }
      volume_id: { get_resource: volume_2 }
      mountpoint: /dev/vdc

  extension_volumes:
    type: OS::Heat::ResourceGroup
    depends_on: volume_attachment_2
    properties:
      count: { get_param: extension_volume_group_size }
      resource_def:
        type: volume_with_attachment.yaml
        properties:
          instance_id: { get_resource: vm }
          volume_name:
            list_join: ['-', [{ get_param: vm_name }, 'extension-vol', '%index%']]
          volume_size: { get_param: extension_volume_size }
          volume_deletion_policy: { get_param: volume_deletion_policy }
