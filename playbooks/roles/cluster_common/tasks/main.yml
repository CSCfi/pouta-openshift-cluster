---
- name: add entries to /etc/hosts for all cluster members
  lineinfile:
    state: present
    dest: /etc/hosts
    regexp: "^{{ hostvars[item]['ansible_ssh_host'] }} {{ item }}.*"
    line: >-
      {{ hostvars[item]['ansible_ssh_host'] }}
      {{ item }}
      {%- if poc_override_domain_suffix != '' %} {{ item }}{{ poc_override_domain_suffix }}{% endif -%}
      {%- if 'node_alt_name' in hostvars[item] %} {{ hostvars[item]['node_alt_name'] }}{% endif -%}
  when: hostvars[item]['ansible_ssh_host'] is defined
  with_items: "{{ groups['all'] }}"
  notify: reload dnsmasq

- name: add default iptables persistent state file
  template:
    src: etc/sysconfig/iptables.j2
    dest: /etc/sysconfig/iptables
    force: no

- name: generate ssh key for cloud-user
  user: name=cloud-user generate_ssh_key=yes ssh_key_type=rsa
  when: inventory_hostname in groups.bastion

- name: download public keys from bastion
  fetch: dest=/tmp/ansible/public_keys/ src=.ssh/id_rsa.pub
  when: inventory_hostname in groups.bastion

- name: authorize ssh with the downloaded key
  authorized_key: user=cloud-user key="{{ lookup('file', '/tmp/ansible/public_keys/{{ item }}/.ssh/id_rsa.pub') }}"
  with_items: "{{ groups.bastion }}"
  when: inventory_hostname not in groups.bastion

- name: set SELinux state
  selinux: state="{{ selinux_state }}"
  when: selinux_state is defined

# rpcbind is installed and enabled by default, turn it off for security
- name: disable rpcbind
  service: name=rpcbind state=stopped enabled=false
  when: inventory_hostname not in groups.glusterfs or openshift_storage_glusterfs_is_native|default(True)

- name: allow connections to the NRPE daemons in the cluster
  lineinfile:
    dest: /etc/sysconfig/iptables
    insertafter: '^-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT'
    line: '-A INPUT -s 192.168.0.0/16 -d 192.168.0.0/16 -p tcp -m tcp --dport 5666 -j ACCEPT'
  notify: restart iptables
  when:
    - inventory_hostname not in groups.bastion
    - not poc_installed|default(False) or poc_allow_iptables_update|default(false)

- name: ensure /mnt is not mounted
  mount:
    path: '/mnt'
    state: unmounted

- name: ensure /mnt mount is not listed in fstab
  mount:
    path: '/mnt'
    state: absent

- name: configure cron to send output to syslog instead of mail
  lineinfile:
    path: /etc/sysconfig/crond
    regexp: '^CRONDARGS=.*'
    line: 'CRONDARGS=-s -m off'
  notify: restart crond

- name: daily rotation and compression for syslog files
  copy:
    dest: /etc/logrotate.d/syslog
    src: files/logrotated_syslog
    mode: 0644
    owner: root
    group: root

# Fresh installs with OpenShift 3.10 will not accept overriding the node host name,
# so we optionally override it on the host
- name: write /etc/hostname with given domain
  copy:
    dest: "/etc/hostname"
    owner: root
    group: root
    mode: 0644
    content: |
      {{ ansible_hostname }}{{ poc_override_domain_suffix }}
  register: write_etc_hostname

- name: activate the new hostname
  shell: >
    hostname -F /etc/hostname
  when: write_etc_hostname.changed

# Create a udev rule to set readahead and io-scheduler for dynamically attached volumes (csi-cinder)
# Note that 'deadline' scheduler works for selecting the new 'mq-deadline' as well
- name: set constant readahead and scheduler for virtio block devices
  copy:
    dest: /etc/udev/rules.d/99-block-readahead-scheduler.rules
    owner: root
    group: root
    mode: 0644
    content: |
      SUBSYSTEM=="block", ACTION=="add|change", KERNEL=="sd[a-z]", ATTR{bdi/read_ahead_kb}="4096", ATTR{queue/scheduler}="deadline"
      SUBSYSTEM=="block", ACTION=="add|change", KERNEL=="sd[a-z][a-z]", ATTR{bdi/read_ahead_kb}="4096", ATTR{queue/scheduler}="deadline"
      SUBSYSTEM=="block", ACTION=="add|change", KERNEL=="vd[a-z]", ATTR{bdi/read_ahead_kb}="4096", ATTR{queue/scheduler}="deadline"
      SUBSYSTEM=="block", ACTION=="add|change", KERNEL=="vd[a-z][a-z]", ATTR{bdi/read_ahead_kb}="4096", ATTR{queue/scheduler}="deadline"
