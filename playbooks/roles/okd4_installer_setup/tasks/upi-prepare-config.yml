# Installing OpenShift on OpenStack User-Provisioned Infrastructure
# https://github.com/openshift/installer/blob/master/docs/user/openstack/install_upi.md

- name: download upi install ansible playbooks
  shell:
    chdir: "{{ openshift_installer_dir }}"
    cmd: RELEASE="release-4.6"; xargs -n 1 curl -O <<< "
        https://raw.githubusercontent.com/openshift/installer/${RELEASE}/upi/openstack/bootstrap.yaml
        https://raw.githubusercontent.com/openshift/installer/${RELEASE}/upi/openstack/common.yaml
        https://raw.githubusercontent.com/openshift/installer/${RELEASE}/upi/openstack/compute-nodes.yaml
        https://raw.githubusercontent.com/openshift/installer/${RELEASE}/upi/openstack/control-plane.yaml
        https://raw.githubusercontent.com/openshift/installer/${RELEASE}/upi/openstack/down-bootstrap.yaml
        https://raw.githubusercontent.com/openshift/installer/${RELEASE}/upi/openstack/down-compute-nodes.yaml
        https://raw.githubusercontent.com/openshift/installer/${RELEASE}/upi/openstack/down-control-plane.yaml
        https://raw.githubusercontent.com/openshift/installer/${RELEASE}/upi/openstack/down-load-balancers.yaml
        https://raw.githubusercontent.com/openshift/installer/${RELEASE}/upi/openstack/down-network.yaml
        https://raw.githubusercontent.com/openshift/installer/${RELEASE}/upi/openstack/down-security-groups.yaml
        https://raw.githubusercontent.com/openshift/installer/${RELEASE}/upi/openstack/down-containers.yaml
        https://raw.githubusercontent.com/openshift/installer/${RELEASE}/upi/openstack/inventory.yaml
        https://raw.githubusercontent.com/openshift/installer/${RELEASE}/upi/openstack/network.yaml
        https://raw.githubusercontent.com/openshift/installer/${RELEASE}/upi/openstack/security-groups.yaml"

- name: create inventory.yaml configuration file
  template:
    src: inventory.yaml.j2
    dest: "{{ openshift_installer_dir }}/inventory.yaml"

- name: create installer manifests
  command:
    chdir: "{{ openshift_installer_dir }}"
    cmd: ./openshift-install create manifests

- name: remove Machines and MachineSets
  file:
    path: "{{ openshift_installer_dir }}/openshift/99_openshift-cluster-api_*-machines-*.yaml"
    state: absent

- name: copy make-unschedulable.py to installer folder
  copy:
    src: make-unschedulable.py
    dest: "{{ openshift_installer_dir }}/make-unschedulable.py"

- name: run make-unschedulable.py
  command:
    chdir: "{{ openshift_installer_dir }}"
    cmd: python make-unschedulable.py

- name: create ignition configs
  command:
    chdir: "{{ openshift_installer_dir }}"
    cmd: ./openshift-install create ignition-configs

- name: get infra ID
  command:
    chdir: "{{ openshift_installer_dir }}"
    cmd: jq -r .infraID metadata.json
  register: infra_id

- name: debug infra id
  debug:
    var: infra_id

- name: copy edit-bootstrap-ignition.py to installer folder
  copy:
    src: edit-bootstrap-ignition.py
    dest: "{{ openshift_installer_dir }}/edit-bootstrap-ignition.py"

- name: run edit-bootstrap-ignition.py
  command:
    chdir: "{{ openshift_installer_dir }}"
    cmd: python edit-bootstrap-ignition.py
  environment:
    INFRA_ID: "{{ infra_id.stdout }}"

# upload bootstrap ignition files to glance for temporary use
- name: upload bootstrap.ign to glance
  command:
    chdir: "{{ openshift_installer_dir }}"
    cmd: openstack image create --disk-format=raw --container-format=bare --private --file bootstrap.ign bootstrap.ign

- name: get glance base url
  shell:
    cmd: openstack catalog show image -f value -c endpoints | grep public | awk '{ print $2 }'
  register: glance_base_url

- name: get bootstrap file url
  shell:
    cmd: openstack image show bootstrap.ign -f value -c file
  register: glance_file_url

- name: get glance download token
  command:
    cmd: openstack token issue -c id -f value
  register: glance_download_token

- name: copy edit-master-ignition.sh to installer folder
  copy:
    src: edit-master-ignition.sh
    dest: "{{ openshift_installer_dir }}/edit-master-ignition.sh"

# NOTE: This script is hard-coded to expect 3 master nodes
- name: run edit-master-ignition.sh
  command:
    chdir: "{{ openshift_installer_dir }}"
    cmd: sh edit-master-ignition.sh
  environment:
    INFRA_ID: "{{ infra_id.stdout }}"

- name: create bootstrap-ignition.json configuration file
  template:
    src: bootstrap-ignition.json.j2
    dest: "{{ openshift_installer_dir }}/{{ infra_id.stdout }}-bootstrap-ignition.json"
