- set_fact: vg_name=vg_{{ filesystem_spec.volume }}

- set_fact: lv_name=lv_{{ filesystem_spec.name }}

- set_fact: lv_path="/dev/{{ vg_name }}/{{ lv_name }}"

- set_fact: is_swap="{{ filesystem_spec.fstype|default('') == 'swap' }}"

- stat: path=lv_path
  register: stat_lv_path

- name: create logical volume for {{ vg_name }}/{{ lv_name }}
  lvol:
    vg: "{{ vg_name }}"
    lv: "{{ lv_name }}"
    size: "{{ filesystem_spec.size|default('99%VG') }}"
  when: stat_lv_path.stat.exists == False

- name: make sure {{ filesystem_spec.name }} mount path exists
  file:
    path: "{{ filesystem_spec.mount_path }}"
    state: directory
  when: filesystem_spec.mount_path is defined

- name: format {{ filesystem_spec.name }}
  filesystem:
    fstype: "{{ filesystem_spec.fstype }}"
    dev: "{{ lv_path }}"
    opts: "-L {{ filesystem_spec.name }} {{ filesystem_spec.mkfs_opts|default('') }}"
  when: not is_swap

- block:
  - name: check for swap
    shell: 'swapon --show=NAME,PRIO | grep -E "^/"'
    register: swapon_output
    ignore_errors: yes
    changed_when: false
    failed_when: false

  - name: run mkswap on {{ lv_path }}
    command: mkswap -L {{ filesystem_spec.name }} {{ lv_path }}
    when: swapon_output.stdout_lines | length == 0

  - name: run swapon {{ lv_path }}
    command: swapon {{ lv_path }}
    when: swapon_output.stdout_lines | length == 0

  - name: write swap entry in fstab
    mount:
      name: none
      src: "{{ lv_path }}"
      fstype: swap
      state: present
  when: is_swap

- name: mount {{ filesystem_spec.name }}
  mount:
    name: "{{ filesystem_spec.mount_path }}"
    src: "LABEL={{ filesystem_spec.name }}"
    fstype: "{{ filesystem_spec.fstype }}"
    opts: "{{ filesystem_spec.mount_opts|default('defaults,rw') }}"
    state: mounted
  when: filesystem_spec.mount_path is defined
