- include_tasks: setup_eth1.yml

- name: disable auto-updates on Pouta
  file:
    name: /etc/cron.daily/automatic_updates
    state: absent

- name: create base yum repo file if OS minor version is not locked
  template:
    src: base.repo.j2
    dest: /etc/yum.repos.d/CentOS-Base.repo
  register: templatize_base_repo_config_file
  when: lock_os_minor_version|bool == False

- name: remove base repo config if OS minor version is locked
  file:
    path: /etc/yum.repos.d/CentOS-Base.repo
    state: absent
  when: lock_os_minor_version
  register: templatized_base_repo_config_file_removed

- name: optionally lock operating system minor version in repo config
  yum_repository:
    name: "{{ item.name }}"
    baseurl: "{{ locked_repo_base }}/{{ os_version | default(ansible_distribution_version) }}/{{ item.subpath }}/$basearch/"
    description: "CentOS-{{ os_version | default(ansible_distribution_version) }} - {{ item.name }}"
    enabled: "{{ item.enabled }}"
    gpgcheck: yes
    gpgkey: "file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7"
    state: "{{ item.state }}"
  with_items:
    - name: 'base'
      subpath: 'os'
      enabled: "{{ (lock_os_minor_version|default(false)|bool) | ternary('1', '0') }}"
      state: "{{ (lock_os_minor_version|bool) | ternary('present', 'absent') }}"
    - name: 'updates'
      subpath: 'updates'
      enabled: "{{ (lock_os_minor_version|default(false)|bool) | ternary('1', '0') }}"
      state: "{{ (lock_os_minor_version|bool) | ternary('present', 'absent') }}"
    - name: 'extras'
      subpath: 'extras'
      enabled: "{{ (lock_os_minor_version|default(false)|bool) | ternary('1', '0') }}"
      state: "{{ (lock_os_minor_version|bool) | ternary('present', 'absent') }}"
    - name: 'centosplus'
      subpath: 'centosplus'
      enabled: no
      state: "{{ (lock_os_minor_version|bool) | ternary('present', 'absent') }}"
  register: create_locked_yum_repo_configs

- name: yum clean metadata
  command: yum clean metadata
  args:
    warn: no
  when: >
    templatize_base_repo_config_file.changed or
    create_locked_yum_repo_configs.changed or
    templatized_base_repo_config_file_removed.changed

- name: install basic tools
  yum: pkg={{item}} state=present
  with_items:
    - dstat
    - lsof
    - bash-completion
    - time
    - tmux
    - git
    - xauth
    - screen
    - nano
    - vim
    - bind-utils
    - nmap-ncat
    - lvm2
    - chrony
    - bzip2
    - iptables
    - iptables-services
    - NetworkManager
    - jq
    - sysstat
    - logrotate
    - python-pip

- name: install virtualenv for Python
  pip: name=virtualenv state=present

- name: disable kdump
  service:
    name: kdump
    state: stopped
    enabled: no
  register: kdump_status

- name: reset failed units in systemd if needed
  command: systemctl reset-failed
  when: kdump_status.changed

- name: stop cloud-init managing /etc/hosts
  lineinfile:
    dest: /etc/cloud/cloud.cfg.d/10_etc_hosts.cfg
    state: present
    regexp: '^manage_etc_hosts'
    line: 'manage_etc_hosts: False'
    create: yes

- name: stop cloud-init from managing hostnames
  lineinfile:
    dest: /etc/cloud/cloud.cfg
    regexp: "{{ item }}"
    state: absent
  with_items:
    - '^ - set_hostname$'
    - '^ - update_hostname$'

- name: fix /etc/hosts after cloud-init
  lineinfile:
    dest: /etc/hosts
    state: absent
    regexp: "^127.0.0.1(.*){{ inventory_hostname }}(.*)"

- name: remove ntp.org pool hosts from config
  lineinfile:
    dest: /etc/chrony.conf
    state: absent
    regexp: '^server .*ntp.org iburst'
  when: custom_ntp_servers is defined
  notify: restart chronyd

- name: add custom servers to NTP config
  lineinfile:
    dest: /etc/chrony.conf
    state: present
    line: 'server {{ item }} iburst'
  with_items: '{{ custom_ntp_servers|default([]) }}'
  when: custom_ntp_servers is defined
  notify: restart chronyd

- name: start and enable services
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items:
    - NetworkManager
    - chronyd

- name: increase open file handle limit for rsyslog
  ini_file:
    path: '/usr/lib/systemd/system/rsyslog.service'
    backup: yes
    create: no
    no_extra_spaces: yes
    section: 'Service'
    option: 'LimitNOFILE'
    value: '10000'
  notify:
    - systemctl daemon-reload
    - restart rsyslog

- include: rng.yml
