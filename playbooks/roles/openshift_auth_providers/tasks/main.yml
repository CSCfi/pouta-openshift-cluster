---
- name: Setup OAuth authentication providers
  yedit:
    src: "{{Â openshift_master_config_file }}"
    key: oauthConfig.identityProviders
    value: |
      - name: Local account
        login: true
        mappingMethod: "{{ local_auth_mapping_method }}"
        challenge: true
        provider:
          apiVersion: v1
          file: /etc/origin/master/htpasswd
          kind: HTPasswdPasswordIdentityProvider
      {% if deploy_github_auth | d() | bool == true -%}
      - name: GitHub
        challenge: false
        login: true
        mappingMethod: "{{ github_auth_mapping_method }}"
        provider:
          apiVersion: v1
          kind: GitHubIdentityProvider
          clientID: "{{ github_oauth_client_id }}"
          clientSecret: "{{ github_oauth_client_secret }}"
          organizations:
      {%   for org in github_allowed_auth_orgs %}
            - {{ org }}
      {%   endfor %}
      {% endif %}
      {% if deploy_gitlab_auth | d() | bool == true -%}
      - name: "{{ gitlab_oauth_provider_name }}"
        challenge: true
        login: true
        mappingMethod: "{{ gitlab_auth_mapping_method }}"
        provider:
          apiVersion: v1
          kind: GitLabIdentityProvider
          url: "{{ gitlab_url }}"
          clientID: "{{ gitlab_oauth_client_id }}"
          clientSecret: "{{ gitlab_oauth_client_secret }}"
      {% endif %}
      {% if deploy_ldap_auth | d() | bool == true -%}
      - name: "{{ ldap_auth_provider_name }}"
        challenge: true
        login: true
        mappingMethod: "{{ ldap_auth_mapping_method }}"
        provider:
          apiVersion: v1
          kind: LDAPPasswordIdentityProvider
          attributes:
      {%   for key in ldap_attribute_map %}
            {{ key }}:
      {%     for value in ldap_attribute_map[key] %}
              - {{ value }}
      {%     endfor %}
      {%   endfor %}
          insecure: false
      {%   if ldap_bind_account_dn is defined %}
          bindDN: "{{ ldap_bind_account_dn }}"
      {%   endif %}
      {%   if ldap_bind_account_password is defined %}
          bindPassword: "{{ ldap_bind_account_password }}"
      {%   endif %}
          url: "{{ ldap_user_query }}"
      {% endif %}
      {% if deploy_openid_connect_auth | d() | bool == true -%}
      {%   for conf in openid_connect_auth_providers %}
      - name: "{{ conf.name }}"
        challenge: true
        login: true
        mappingMethod: "{{ conf.mapping_method }}"
        provider:
          apiVersion: v1
          kind: OpenIDIdentityProvider
          clientID: "{{ conf.client_id }}"
          clientSecret: "{{ conf.client_secret }}"
      {%     if conf.extra_scopes is defined %}
          extraScopes:
      {%       for extra_scope in conf.extra_scopes %}
          - {{ extra_scope }}
      {%       endfor %}
      {%     endif %}
          extraAuthorizeParameters:
            include_granted_scopes: "true"
          claims:
      {%   for key in conf.claims %}
            {{ key }}:
      {%     for value in conf.claims[key] %}
              - {{ value }}
      {%     endfor %}
      {%   endfor %}
          urls:
            authorize: "{{ conf.authorize_url }}"
            token: "{{ conf.token_url }}"
      {%     if conf.user_info_url is defined %}
            userInfo: "{{ conf.user_info_url }}"
      {%     endif %}
      {%   endfor %}
      {% endif %}
  notify:
    - restart master
    - restart master api

- name: populate/update htaccess file
  copy:
    dest: /etc/origin/master/htpasswd
    mode: 0600
    owner: root
    group: root
    content: |
      {% for user, pass in local_auth_mapping_htaccess_entries.iteritems() %}
      {{   user ~ ':' ~ pass }}
      {% endfor %}

- name: create a LDAP group sync file
  copy:
    dest: /etc/origin/master/ldap_group_sync.yaml
    mode: 0600
    owner: root
    group: root
    content: |
      kind: LDAPSyncConfig
      apiVersion: v1
      url: {{ ldap_protocol }}://{{ ldap_auth_host }}
      {% if ldap_bind_account_dn is defined %}
      bindDN: "{{ ldap_bind_account_dn }}"
      {% endif %}
      {% if ldap_bind_account_password is defined %}
      bindPassword: "{{ ldap_bind_account_password }}"
      {% endif %}
      {{ ldap_group_sync_schema_params }}
  when:
  - deploy_ldap_group_sync | default(False) | bool
